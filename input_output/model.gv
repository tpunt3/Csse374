digraph model{
rankdir = BT;
Soy [
shape="record",color=green
label = "{Soy\n\<\<decorator\>\>|~ beverage: Beverage\l|+ init(Beverage) : void\l+ cost() : double\l+ getDescription() : String\l}"
];

App [
shape="record",
label = "{App| + init() : void\l+ main(String[]) : void\l}"
];

Milk [
shape="record",color=green
label = "{Milk\n\<\<decorator\>\>|~ beverage: Beverage\l|+ cost() : double\l+ getDescription() : String\l+ init(Beverage) : void\l}"
];

CondimentDecorator [
shape="record",color=green
label = "{CondimentDecorator\n\<\<decorator\>\>|+ getDescription() : String\l+ init() : void\l}"
];

HouseBlend [
shape="record",
label = "{HouseBlend| + init() : void\l+ cost() : double\l}"
];

IteratorToEnumerationAdapter [
shape="record",color=red
label = "{IteratorToEnumerationAdapter\n\<\<adapter\>\>|- itr: Iterator\l|+ init(Iterator) : void\l+ nextElement() : E\l+ hasMoreElements() : boolean\l}"
];

Mocha [
shape="record",color=green
label = "{Mocha\n\<\<decorator\>\>|~ beverage: Beverage\l|+ cost() : double\l+ init(Beverage) : void\l+ getDescription() : String\l}"
];

Decaf [
shape="record",
label = "{Decaf| + init() : void\l+ cost() : double\l}"
];

Espresso [
shape="record",
label = "{Espresso| + cost() : double\l+ init() : void\l}"
];

StarbuzzCoffee [
shape="record",
label = "{StarbuzzCoffee| + main(String[]) : void\l+ init() : void\l}"
];

Iterator [
shape="record",color=red
label = "{\<\<interface\>\>\nIterator\n\<\<adaptee\>\>| + next() : E\l+ forEachRemaining(Consumer) : Consumer\l+ hasNext() : boolean\l+ remove() : void\l}"
];

Enumeration [
shape="record",color=red
label = "{\<\<interface\>\>\nEnumeration\n\<\<target\>\>| + nextElement() : E\l+ hasMoreElements() : boolean\l}"
];

Beverage [
shape="record",color=green
label = "{Beverage\n\<\<component\>\>|~ description: String\l|+ init() : void\l+ getDescription() : String\l+ cost() : double\l}"
];

LinearTransformer [
shape="record",
label = "{LinearTransformer| - enumTion: Enumeration\l|+ init(Enumeration) : void\l+ transform(OutputStream) : void\l}"
];

DarkRoast [
shape="record",
label = "{DarkRoast| + init() : void\l+ cost() : double\l}"
];

Whip [
shape="record",color=green
label = "{Whip\n\<\<decorator\>\>|~ beverage: Beverage\l|+ init(Beverage) : void\l+ cost() : double\l+ getDescription() : String\l}"
];

//writing relations between classes now
CondimentDecorator -> Beverage [arrowhead = "empty"];
DarkRoast -> Beverage [arrowhead = "empty"];
Decaf -> Beverage [arrowhead = "empty"];
Espresso -> Beverage [arrowhead = "empty"];
HouseBlend -> Beverage [arrowhead = "empty"];
Milk -> CondimentDecorator [arrowhead = "empty"];
Milk -> Beverage [arrowhead = "vee"];
Mocha -> CondimentDecorator [arrowhead = "empty"];
Mocha -> Beverage [arrowhead = "vee"];
Soy -> CondimentDecorator [arrowhead = "empty"];
Soy -> Beverage [arrowhead = "vee"];
StarbuzzCoffee -> Espresso [arrowhead = "vee", style = "dashed"];
StarbuzzCoffee -> DarkRoast [arrowhead = "vee", style = "dashed"];
StarbuzzCoffee -> Mocha [arrowhead = "vee", style = "dashed"];
StarbuzzCoffee -> Whip [arrowhead = "vee", style = "dashed"];
StarbuzzCoffee -> HouseBlend [arrowhead = "vee", style = "dashed"];
StarbuzzCoffee -> Soy [arrowhead = "vee", style = "dashed"];
Whip -> CondimentDecorator [arrowhead = "empty"];
Whip -> Beverage [arrowhead = "vee"];
App -> IteratorToEnumerationAdapter [arrowhead = "vee", style = "dashed"];
App -> Iterator [arrowhead = "vee", style = "dashed"];
App -> LinearTransformer [arrowhead = "vee", style = "dashed"];
IteratorToEnumerationAdapter -> Enumeration [arrowhead = "empty", style = "dashed"];
LinearTransformer -> Enumeration [arrowhead = "vee"];
CondimentDecorator -> Beverage [arrowhead = "vee", label = "decorates"];
IteratorToEnumerationAdapter -> Iterator [arrowhead = "vee", label = "adapts"];
}