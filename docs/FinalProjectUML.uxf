<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>203</y>
      <w>147</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>DesignParser
--
+CLASSES: java.lang.String[]
--
~DesignParser(): ctor
+DesignParser(): ctor
+main(java.lang.String[]): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>126</x>
      <y>329</y>
      <w>70</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ClassVisitor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>259</y>
      <w>84</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IClazzGetter
--
getClazz(): IClass</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>147</x>
      <y>343</y>
      <w>21</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>147</x>
      <y>399</y>
      <w>84</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>147</x>
      <y>490</y>
      <w>56</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>91</x>
      <y>301</y>
      <w>70</w>
      <h>434</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;600.0;80.0;600.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>91</x>
      <y>413</y>
      <w>140</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>91</x>
      <y>504</y>
      <w>112</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>987</x>
      <y>763</y>
      <w>140</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IModelTraverser
--
+accept(IModelVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1652</x>
      <y>294</y>
      <w>133</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>ModelVisiorAdapter
--
+preVisit(IModel m): void
+preVisit(IClass c): void
+preVisit(IMethod m): void
+preVisit(IField f): void
+visit(IModel m): void
+visit(IClass c): void
+visit(IMethod m): void
+visit(IField f): void
+postVisit(IModel m): void
+postVisit(IClass c): void
+postVisit(IMethod m): void
+postVisit(IField f): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1708</x>
      <y>238</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1456</x>
      <y>539</y>
      <w>224</w>
      <h>203</h>
    </coordinates>
    <panel_attributes>ModelGVOutputStream
--
~out: OutputStream
--
+ModelGVOutputStream(): ctor
+ModelGVOutputStream(OutputStream out): ctor
+preVisit(IModel m): void
+visit(IModel m): void
+postVisit(IModel m): void
+preVisit(IClass c): void
+visit(IClass c): void
+postVisit(IClass c): void
+preVisit(IMethod m): void
+visit(IMethod m): void
+postVisit(IMethod m): void
+preVisit(IField f): void
+visit(IField f): void
+postVisit(IField f): void
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>637</x>
      <y>1162</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>1169</y>
      <w>21</w>
      <h>357</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;490.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1057</x>
      <y>1169</y>
      <w>21</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1435</x>
      <y>1169</y>
      <w>126</w>
      <h>343</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0;160.0;130.0;160.0;470.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1253</x>
      <y>1134</y>
      <w>21</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>805</y>
      <w>21</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>1015</y>
      <w>455</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;630.0;10.0;630.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>1015</y>
      <w>378</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0;520.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>882</x>
      <y>1015</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1253</x>
      <y>1015</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1582</x>
      <y>1232</y>
      <w>308</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>SubMethod
--
-clazzName: String
-name: String
-args: String
-qualifiedClassName: String
-returnType: String
-visited: boolean
--
+SubMethod(): ctor
+isVisited(): boolean
+setVisited(boolean visited): void
+getQualifiedClassName(): String
+getClazzName(): String
+getMethodName(): String
+getArgs(): String
+accept(IModelVisitor v): void
+acceptSequence(IModelVisitor v, ISubMethod sm, int depth): void
+writeFile(IModelVisitor sdWriter): void
+getReturnType(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1659</x>
      <y>1050</y>
      <w>161</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ISubMethod
--
--
+getClazzName(): String
+getMethodName(): String
+getArgs(): String
+getQualifiedClassName(): String
+isVisited(): boolean
+setVisited(boolean b): void
+getReturnType(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1736</x>
      <y>1176</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1463</x>
      <y>1015</y>
      <w>287</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;390.0;10.0;390.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1743</x>
      <y>539</y>
      <w>231</w>
      <h>273</h>
    </coordinates>
    <panel_attributes>ModelSDOutputStream
--
~out: OutputStream
~s: StringBuilder
--
+ModelSDOutputStream(OutputStream out): ctor
-write(String s): void
+preVisit(IModel m): void
+visit(IModel m): void
+postVisit(IModel m): void
+preVisit(IClass c): void
+visit(IClass c): void
+postVisit(IClass c): void
+visit(IMethod m): void
+visit(IField f): void
+preVisit(IMethod m): void
+preVisit(IField f): void
+postVisit(IMethod m): void
+postVisit(IField f): void
+intermediateVisit(IClass C): void
+preVisit(IRelation r): void
+visitSuperClasses(IRelation r): void
+visitInterfaces(IRelation r): void
+postVisit(IRelation r): void
+visitRelations(IModel m): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1715</x>
      <y>448</y>
      <w>175</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;230.0;60.0;230.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1568</x>
      <y>483</y>
      <w>168</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>1785</y>
      <w>168</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>RelationType
--
+superClass: RelationType
+interfaces: RelationType
+uses: RelationType
+association: RelationType
-ENUM$VALUES: RelationType[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>1715</y>
      <w>21</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>105</x>
      <y>819</y>
      <w>385</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>MyMethodVisitor
--
-model: Model
-clazz: IClass
-subMethods: ArrayList&lt;ISubMethod&gt;
-name: String
--
+MyMethodVisitor(int api, MethodVisitor decorated, Model m, IClass clazz): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
+visitFieldInsn(int opcode, String owner, String name, String desc): void
+visitTypeInsn(int opcode, String type): void
+visitVarInsn(int opcode, int var): void
~getArguments(String desc): String
~getReturnType(String desc): String
~getType(String desc): String
+getSubMethods(): ArrayList&lt;ISubMethod&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>434</y>
      <w>70</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>MethodVisitor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>28</x>
      <y>448</y>
      <w>112</w>
      <h>385</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;490.0;140.0;490.0;140.0;530.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>210</x>
      <y>210</y>
      <w>161</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>DocType
--
+uml: DocType
+sd: DocType
+both: DocType
-ENUM$VALUES: DocType[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>364</x>
      <y>238</y>
      <w>63</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>770</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>469</x>
      <y>280</y>
      <w>21</w>
      <h>322</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;440.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>385</y>
      <w>70</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>441</x>
      <y>497</y>
      <w>49</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>553</x>
      <y>231</y>
      <w>1008</w>
      <h>322</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>1420.0;440.0;1420.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1540</x>
      <y>504</y>
      <w>336</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>460.0;50.0;460.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1057</x>
      <y>133</y>
      <w>616</w>
      <h>644</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>860.0;10.0;10.0;10.0;10.0;900.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>147</x>
      <y>588</y>
      <w>350</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>problem.asm::ClassMethodVisitor
--
-model: Model
-decorated: ClassVisitor
-clazz: IClass
-signature: String
-name: String
-argList: String
--
+ClassMethodVisitor(int api): ctor
+ClassMethodVisitor(int api, ClassVisitor decorated, Model m): ctor
+visitMethod(...): MethodVisitor
~addAccessLevel(int access): String
~addReturnType(String desc): String
~addArguments(String desc): void
-addArgToList(String arg, boolean isLast): void
+getClazz(): IClass
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>189</x>
      <y>455</y>
      <w>259</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>problem.asm::ClassFieldVisitor
--
-model: Model
-clazz: IClass
-decorated: ClassVisitor
--
+ClassFieldVisitor(int api, ClassVisitor d, Model m): ctor
+visitField(): FieldVisitor
~addAccessLevel(int access): String
+getClazz(): IClass
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>217</x>
      <y>336</y>
      <w>210</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>ClassDeclarationVisitor
--
-model: Model
-clazz: IClass
--
+ClassDeclarationVisitor(int api, Model m): ctor
+visit(): void
+getClazz(): IClass
+splitOnSlash(String stringToSplit): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>1050</y>
      <w>203</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IMethod
--
--
+getAccess(): String
+getName(): String
+getArgs(): String
+getReturnType(): String
+getSignature(): String
+getClazz(): IClass
+getSubMethods(): ArrayList&lt;ISubMethod&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>539</x>
      <y>1043</y>
      <w>175</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IClass
--
--
+getName(): String
+getMethods(): Collection&lt;IMethod&gt;
+getFields(): Collection&lt;IField&gt;
+addMethod(IMethod m): void
+addField(IField f): void
+getIsClass(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1372</x>
      <y>1050</y>
      <w>175</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IModel
--
--
+getClasses(): HashSet&lt;IClass&gt;
+addClazz(IClass c): void
+getClazz(String s): IClass
+getRelations(): ArrayList&lt;IRelation&gt;
+getClassStrings(): HashSet&lt;String&gt;
+getMethodStrings(): ArrayList&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>1050</y>
      <w>147</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.models.api::IRelation
--
--
+setName(String s): void
+getName(): String
+setRelatedClass(String s): void
+getRelatedClass(): String
+setType(RelationType t): void
+getType(): RelationType
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1197</x>
      <y>1050</y>
      <w>126</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IField
--
--
+getType(): String
+getAccess(): String
+getName(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>609</x>
      <y>1512</y>
      <w>301</w>
      <h>315</h>
    </coordinates>
    <panel_attributes>Method
--
-access: String
-name: String
-args: String
-returnType: String
-signature: String
-clazz: IClass
-subMethods: ArrayList&lt;ISubMethod&gt;
--
+Method(...): ctor
+getSignature(): String
+setSignature(String signature): void
+getReturnType(): String
+getArgs(): String
+getName(): String
+setName(String name): void
+getAccess(): String
+accept(IModelVisitor v): void
+getSubMethods(): ArrayList&lt;ISubMethod&gt;
+getClazz(): IClass
+setClazz(IClass clazz): void
+acceptSequence(IModelVisitor v, ISubMethod sm, int depth): void
+writeFile(IModelVisitor sdWriter): void
+hashCode(): int
+equals(Object obj): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>1239</y>
      <w>301</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>Class
--
-name: String
-methods: HashSet&lt;IMethod&gt;
-fields: Collection&lt;IField&gt;
-isClass: boolean
--
+Class(String name, boolean isClass): ctor
+Class(): ctor
+getName(): String
+getMethods(): Collection&lt;IMethod&gt;
+getFields(): Collection&lt;IField&gt;
+addMethod(IMethod m): void
+addField(IField f): void
+accept(IModelVisitor v): void
+getIsClass(): boolean
+acceptSequence(IModelVisitor v, ISubMethod sm, int depth): void
+writeFile(IModelVisitor sdWriter): void
+hashCode(): int
+equals(Object obj): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>959</x>
      <y>1491</y>
      <w>308</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>Relation
--
-name: String
-relatedClass: String
-type: RelationType
--
+Relation(): ctor
+Relation(String name, String relatedClass, RelationType type): ctor
+getName(): String
+setName(String name): void
+getRelatedClass(): String
+setRelatedClass(String relatedClass): void
+getType(): RelationType
+setType(RelationType type): void
+accept(IModelVisitor v): void
+hashCode(): int
+equals(Object obj): boolean
+acceptSequence(IModelVisitor v, ISubMethod sm, int depth): void
+writeFile(IModelVisitor sdWriter): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1176</x>
      <y>1281</y>
      <w>301</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>Field
--
-type: String
-access: String
-name: String
--
+Field(String type, String name, String access): ctor
+getName(): String
+setName(String name): void
+getType(): String
+getAccess(): String
+accept(IModelVisitor v): void
+acceptSequence(IModelVisitor v, ISubMethod sm, int depth): void
+writeFile(IModelVisitor sdWriter): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>707</x>
      <y>1134</y>
      <w>539</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>750.0;10.0;750.0;180.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>805</x>
      <y>1169</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1659</x>
      <y>0</y>
      <w>168</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.model.visitor::IModelVisitor
--
--
+preVisit(IModel m): void
+preVisit(IClass c): void
+preVisit(IMethod m): void
+preVisit(IField f): void
+preVisit(IRelation r): void
+visit(IModel m): void
+visit(IClass c): void
+visit(IMethod m): void
+visit(IField f): void
+visitSuperClasses(IRelation r): void
+visitInterfaces(IRelation r): void
+postVisit(IModel m): void
+postVisit(IClass c): void
+postVisit(IMethod m): void
+postVisit(IField f): void
+postVisit(IRelation r): void
+visitRelations(IModel m): void
+intermediateVisit(IClass C): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1162</x>
      <y>161</y>
      <w>511</w>
      <h>819</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;1150.0;10.0;10.0;710.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>637</x>
      <y>959</y>
      <w>1134</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0;1600.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1750</x>
      <y>959</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1428</x>
      <y>959</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1232</x>
      <y>959</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1085</x>
      <y>959</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>959</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1400</x>
      <y>1498</y>
      <w>301</w>
      <h>364</h>
    </coordinates>
    <panel_attributes>Model
&lt;&lt;Singleton&gt;&gt;
--
-uniqueInstance: Model
-callDepth: int
-classes: HashSet&lt;IClass&gt;
-relations: ArrayList&lt;IRelation&gt;
-classStrings: Set&lt;String&gt;
-methodStrings: ArrayList&lt;String&gt;
-classesToAdd: ArrayList&lt;String&gt;
-classNames: ArrayList&lt;String&gt;
--
-Model(): ctor
+Model(HashSet&lt;IClass&gt; classes): ctor
+getInstance(): Model
+getMethodStrings(): ArrayList&lt;String&gt;
+getClassStrings(): HashSet&lt;String&gt;
+getCallDepth(): int
+setCallDepth(int callDepth): void
+getRelations(): ArrayList&lt;IRelation&gt;
+setRelations(ArrayList&lt;IRelation&gt; relations): void
+addRelation(IRelation r): void
+getClasses(): HashSet&lt;IClass&gt;
+getClassNames(): void
+accept(IModelVisitor v): void
+toString(): String
+addClazz(IClass clazz): void
+getClazz(String key): IClass
+findNewClasses(ISubMethod sm, int depth): String[]
+acceptSequence(IModelVisitor v, ISubMethod sm, int depth): void
+writeFile(IModelVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
